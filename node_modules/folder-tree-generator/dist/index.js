#!/usr/bin/env node
var e=require("chalk"),r=require("commander"),t=require("fs"),o=require("update-notifier"),n=require("path");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function a(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach(function(t){if("default"!==t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})}}),r.default=e,r}var c=/*#__PURE__*/i(e),l=/*#__PURE__*/a(t),s=/*#__PURE__*/i(o),f=/*#__PURE__*/a(n),u="1.1.6",p=function e(r,t,o,n,i){for(var a in void 0===o&&(o=[]),void 0===n&&(n=0),r){var c=a,l=r[c],s=Array.isArray(l),f="string"==typeof l,u=s,p=Array.isArray(r)&&[].concat(r).pop(),d=!s&&p===l,g=s&&!l.length,y=(Array.isArray(i)&&[].concat(i).pop())===r&&g,h=t.comments&&g&&!t.folderOnly?" # Empty folder":"",m=t.emojis?f?"üìÑ ":"üìÅ ":"",v=f?l:Array.isArray(r)?null:c,b=Array.from({length:n},function(){return"‚îÇ   "}).join("");null!==v&&o.push(b+((y||d)&&n?"‚îî‚îÄ‚îÄ ":"‚îú‚îÄ‚îÄ ")+m+v+h),"object"==typeof l&&e(l,t,o,u?n+1:n,r)}return o.join("\n")},d=function e(r){var t=[];return r.filter(function(r){if("object"==typeof r)return r[Object.keys(r)[0]]=e(r[Object.keys(r)[0]]),!0}).sort(function(e,r){var t=Object.keys(e)[0],o=Object.keys(r)[0];return t<o?-1:t>o?1:0}).forEach(function(e){return t.push(e)}),r.filter(function(e){return"string"==typeof e}).sort().forEach(function(e){return t.push(e)}),t},g=function e(r,t){var o,n;void 0===t&&(t={}),t.ignore=[].concat([".vscode",".DS_Store",".git","node_modules","dist","coverage",".husky"],t.ignore&&t.ignore||[]);var i=f.basename(r);if(!l.lstatSync(r).isDirectory())return i;var a=l.readdirSync(r);if(null!=(o=t.ignore)&&o.length){var s=t.ignore.map(function(e){try{return new RegExp(e)}catch(r){throw Error(" ‚úó Incorrect Regexp: "+c.default.yellow("'"+e+"'")+" ")}});a=a.filter(function(e){return s.every(function(r){return!r.test(""+e)})})}var u=a.length?a.reduce(function(o,n){return o[i]=l.lstatSync(r+"/"+n).isDirectory()?[].concat(o[i]||[],[e(r+"/"+n,t)]).filter(Boolean):o[i]=Array.apply(void 0,t.folderOnly?o[i]||[]:(o[i]||[]).concat([n])),o},{}):((n={})[i]=[],n);return t.sort&&(u[i]=d(u[i])),u};if(process.argv.slice(2).length){r.program.version(u).option("-d, --directory [dir]","Directory path",process.cwd()).option("-f, --folder-only","Draw folders only").option("-s, --sort","Sort alphabetically and put folders first and then files").option("-c, --comments",'Show "Empty folder" comment (--folder-only must be false)').option("-e, --export [path]",'Set the folder path to export "ftg_tree_[date].txt" or just -e or --export for the default export to the current path').option("-i, --ignore [regex]",'Regex list to ignore folders and/or files (separated by commas) - eg: "example($|/.*),index.ts"').option("--emojis","Show emojis - folder: üìÅ - File: üìÑ").parse(process.argv);var y=r.program.opts();try{if(l.lstatSync(y.directory),y.ignore){if("string"!=typeof y.ignore)throw Error(c.default.bgRed.bold("‚úó Missing regex list"));y.ignore=y.ignore.split(",").map(function(e){return e.trim()})}var h=g(y.directory,y);if("object"==typeof h){var m=p(h,y);console.log(c.default.green("--- TREE FROM TERMINAL ---\n")),console.log(m),console.log(c.default.green("\n--------------------------")),y.export&&(y.export="string"!=typeof y.export?y.directory:y.export,l.writeFile(y.export+"/ftg_tree_"+(new Date).toISOString()+".txt",m,function(e){if(e)throw Error;console.log("\n "+c.default.green("FTG Tree has been exported into")+" "+c.default.yellow(y.export))}))}s.default({pkg:{name:"folder-tree-generator",version:u},shouldNotifyInNpmScript:!0,updateCheckInterval:0}).notify({isGlobal:!0})}catch(e){e instanceof Error&&console.log(c.default.bgRed.bold(" "+e.message+" "))}}exports.drawTreeFromJsonDir=p,exports.ftg=function(e,r){void 0===r&&(r={});try{var t=g(e,r);return"object"==typeof t?p(t,r):t}catch(e){return void(e instanceof Error&&console.log(c.default.bgRed.bold(" "+e.message+" ")))}},exports.parseDirToJson=g,exports.sortFolder=d;
//# sourceMappingURL=index.js.map
